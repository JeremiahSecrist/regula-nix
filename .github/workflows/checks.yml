name: Check flake

on:
  push:
    branches:
      - main
    paths:
      - '**/*.nix'
  workflow_dispatch:

jobs:
  checks:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      actions: write
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v29
      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          # do purge caches
          purge: true
          # purge all versions of the cache
          purge-prefixes: build-${{ runner.os }}-
          # created more than 0 seconds ago relative to the start of the `Post Restore` phase
          purge-created: 0
          # except the version with the `primary-key`, if it exists
          purge-primary-key: never
          # collect garbage until Nix store size (in bytes) is at most this number
          # before trying to save a new cache
          # 1 GB = 1073741824 B
          gc-max-store-size-linux: 1073741824
      - name: Check Nix flake Nixpkgs inputs
        uses: DeterminateSystems/flake-checker-action@main
      - name: Flake output checks
        run: nix flake check -L --option keep-going true
